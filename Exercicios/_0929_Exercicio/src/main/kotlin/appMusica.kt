import org.apache.commons.dbcp2.BasicDataSource
import org.springframework.jdbc.core.BeanPropertyRowMapper
import org.springframework.jdbc.core.JdbcTemplate
import javax.swing.JOptionPane

fun main() {
    val dataSource = BasicDataSource()
    dataSource.driverClassName = "org.h2.Driver"
    dataSource.url = "jdbc:h2:mem:musics"
    dataSource.username = "sa"
    dataSource.password = ""

    val jdbcTemplate = JdbcTemplate(dataSource)

    jdbcTemplate.execute(
        """
        create table musica (
            id INT GENERATED BY DEFAULT AS IDENTITY primary key,
            interprete varchar(50) not null,
            acessosSpotify Int, 
            acessoEncerrado Boolean
        )
    """.trimIndent()
    )

    val musics = mutableListOf<Musica>()

    for (i in 1..2) {
        val musica = Musica()
        musica.interprete = JOptionPane.showInputDialog(null, "Quem esta cantando a musica")
        musica.acessosSpotify = JOptionPane.showInputDialog(null, "Qual a quantidade de acessos no Spotify?").toInt()
        musics.add(musica)

        JOptionPane.showMessageDialog(
            null,
            "A música cantada por ${musica.interprete} teve ${musica.acessosSpotify} de acessos no Spotify"
        )

    }

    musics.forEach {
        JOptionPane.showMessageDialog(
            null,
            "A musica cantada por ${it.interprete} teve ${it.acessosSpotify} de acessos no Spotify"
        )
        val acesso = JOptionPane.showInputDialog("O acesso foi encerrado? Digite 1 para sim ou 2 para não").toString()

        if (acesso == "1") {
            it.acessoEncerrado = true
        }
        val linhasAfetadas = jdbcTemplate.update(
            "insert into musica(interprete,acessosSpotify, acessoEncerrado) values (${it.interprete}, ${it.acessosSpotify}, ${it.acessoEncerrado})"
        )
    }

    val musicsConsultadas: List<Musica> = jdbcTemplate.query(
        "select * from musica;",
        BeanPropertyRowMapper(Musica::class.java)
    )

    musicsConsultadas.forEach {
        if (it.acessoEncerrado) {
            JOptionPane.showMessageDialog(
                null,
                "A música de ${it.interprete}, possui ${it.acessosSpotify} de acessos no Spotify. Ela já teve o acesso encerrado na plataforma"
            )
        } else {
            JOptionPane.showMessageDialog(
                null,
                "A música de {it.interprete}, possui ${it.acessosSpotify} de acessos no Spotify. Ela ainda não teve o acesso encerrado na plataforma"
            )
        }
    }

    jdbcTemplate.execute(
        """
    truncate table musica;
    """
    )

}
